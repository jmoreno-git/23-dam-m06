package team;


import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.SQLException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sql.RowSet;
import javax.sql.rowset.CachedRowSet;
import javax.sql.rowset.RowSetFactory;
import javax.sql.rowset.RowSetProvider;
import java.sql.DriverManager;
import java.sql.Connection;

/**
 *
 * @author Jose
 */
public class MainFrame extends javax.swing.JFrame {

    private RowSet rowSet;

    public RowSet getRowSet() {
        return rowSet;
    }

    public void setRowSet(RowSet rowSet) {
        RowSet prevRowSet = this.rowSet;
        this.rowSet = rowSet;
        firePropertyChange("rowSet", prevRowSet, rowSet);
    }

    public MainFrame() {
        initComponents();
        addPropertyChangeListener("rowSet", (evt) -> {
            try {
                System.out.println("RowSet changed");
                this.teamTablePanel.setRowSet(rowSet);
            } catch (SQLException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
        buildRowSet();
        try {
            this.teamTablePanel.setRowSet(rowSet);
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        teamTablePanel = new teamtable.TeamTablePanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(teamTablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(teamTablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainFrame().setVisible(true);
        });
    }

    private void buildRowSet() {
        Properties dbProps = new Properties();
        try {
            FileReader fr = new FileReader("files/teamsdbsetttings.properties");
            dbProps.load(fr);
            dbProps.put(
                    "url", 
                    String.format(
                            "jdbc:%s://%s:%s/%s",
                            dbProps.getProperty("dbms"),
                            dbProps.getProperty("server_name"),
                            dbProps.getProperty("port_number"),
                            dbProps.getProperty("database_name")));
            RowSetFactory factory = RowSetProvider.newFactory();
            this.rowSet = factory.createCachedRowSet();
            this.rowSet.setUsername(dbProps.getProperty("user_name"));
            this.rowSet.setPassword(dbProps.getProperty("password"));
            this.rowSet.setUrl(dbProps.getProperty("url"));
            this.rowSet.setCommand("select * from teams");
            Connection connection = DriverManager.getConnection(
                    dbProps.getProperty("url"), 
                    dbProps.getProperty("user_name"),
                    dbProps.getProperty("password"));
            connection.setAutoCommit(false);
            ((CachedRowSet)this.rowSet).execute(connection); 
        } catch (FileNotFoundException ex) {
            Logger.getLogger(getClass().getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private teamtable.TeamTablePanel teamTablePanel;
    // End of variables declaration//GEN-END:variables
}
